version: 2
jobs:
  build:
    parallelism: 1
    docker:
       - image: circleci/ruby:2.7.1-node-browsers
       - image: circleci/postgres:12.2
         environment:
           POSTGRES_HOST_AUTH_METHOD: trust
    working_directory: ~/wheel
    environment:
      TZ: "/usr/share/zoneinfo/America/New_York"
      RAILS_ENV: "test"
      RACK_ENV: "test"

    steps:

      - checkout

      # Download cache dependencies
      - restore_cache:
          keys:
          - gem-cache-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          - gem-cache-{{ checksum "Gemfile.lock" }}
          - gem-cache

      - restore_cache:
          keys:
          - wheel-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
          - wheel-yarn-deps-{{ .Branch }}
          - wheel-yarn-deps

      # Bundle install
      - run: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3

      # Store bundle cache
      - save_cache:
          key: gem-cache-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - save_cache:
          key: gem-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - save_cache:
          key: gem-cache
          paths:
            - vendor/bundle

      # Bundler audit
      - run:
          shell: /bin/bash
          command: bundle exec bundle-audit check --update

      # Setup database
      - run: cp config/database.yml.ci config/database.yml
      - run: bundle exec rake db:create db:schema:load --trace

      # Yarn install
      - run: bin/yarn install --cache-folder vendor/node_modules

      # Store yarn cache
      - save_cache:
          key: wheel-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - vendor/node_modules
      - save_cache:
          key: wheel-yarn-deps-{{ .Branch }}
          paths:
            - vendor/node_modules
      - save_cache:
          key: wheel-yarn-deps
          paths:
            - vendor/node_modules

      # Generate assets
      - run: bin/webpack
      - run: bundle exec rails webpacker:compile

      # Unit tests
      - run:
          shell: /bin/bash
          command: bundle exec rake test --trace
workflows:
  version: 2
  commit:
    jobs:
      - build
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build
